package uz.weather.util;

import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboard;
import uz.weather.entity.*;
import uz.weather.entity.enums.Language;
import uz.weather.service.ApiService;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import static uz.weather.db.Datasource.keyboard;
import static uz.weather.entity.enums.Language.ENGLISH;
import static uz.weather.entity.enums.Language.UZBEK;

public interface Message {
    String choseLangUz = "Salom! \uD83C\uDF1F Ob-havo botiga xush kelibsiz.\nO'zingizga kerakli tilni tanlang tilni tanlang:";
    String errMsgUz = "Salom! \uD83C\uDF1F Ob-havo botiga xush kelibsiz.\nO'zingizga kerakli tilni tanlang tilni tanlang:";

    static String changeLangMsg(Language lang) {
        return lang == UZBEK ? "O'zingizga kerakli tilni tanlang tilni tanlang:" :
                lang == ENGLISH ? "Select the language you want:" :
                        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º —è–∑—ã–∫:";
    }

    static String mainMenuMsg(Language lang) {
        return lang == UZBEK ? "Assalomu alaykum. Kerakkli bo'limni tanlng üëá" :
                lang == ENGLISH ? "Hello! \uD83C\uDF1F Pick the section you need \uD83D\uDC47" :
                        "–ü—Ä–∏–≤–µ—Ç! \uD83C\uDF1F –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª \uD83D\uDC47";
    }

    static String settingsMenuMsg(Language lang) {
        return lang == UZBEK ? "Sozlamalar" :
                lang == ENGLISH ? "Settings" :
                        "–ù–∞—Å—Ç—Ä–æ–π–∫–∏";
    }

    static String authSendLocation(Language lang) {
        return lang == UZBEK ? "Ob-havo ma‚Äôlumotini bilish uchun shahar nomini yozing yoki lokatsiyangizni yuboring!" :
                lang == ENGLISH ? "To get the weather information, enter the city name or send your location!" :
                        "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é!";
    }

    static String unSubscribedMsg(Language lang) {
        return lang == UZBEK ? "Har kunlik ob-havo xabarlari muvaffaqiyatli o‚Äòchirildi. Endi ob-havo xabarlari olmaysiz." :
                lang == ENGLISH ? "Daily weather updates have been successfully disabled. You will no longer receive weather notifications." :
                        "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω—ã. –í—ã –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–≥–æ–¥–µ.";
    }

    static String subscribedMsg(Language lang) {
        return lang == UZBEK ? "Har kunlik ob-havo xabarlari muvaffaqiyatli yoqildi! Endi har kuni soat 07:00 da ob-havo ma'lumotlarini olasiz." :
                lang == ENGLISH ? "Daily weather updates have been successfully enabled! You will now receive weather information every day at 07:00." :
                        "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã! –¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 07:00.";
    }


    static String searchMsg(Language lang) {
        return lang == UZBEK ? "Ob-havo ma‚Äôlumotini bilmoqchi bo'lgan shahar nomini kiriting! üîç" :
                lang == ENGLISH ? "Enter the city name to get the weather information! üîç" :
                        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É!! üîç";
    }

    static String change_lang_success_msg(Language lang) {
        return lang == UZBEK ? "‚úÖ Til muvaffaqiyatli o'zgartirildi" :
                lang == ENGLISH ? "‚úÖ Language successfully changed" :
                        "‚úÖ –Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω";
    }

    static String changeLocationSuccessMsg(Language lang) {
        return lang == UZBEK ? "Joylashuv muvaffaqiyatli o‚Äòzgartirildi" :
                lang == ENGLISH ? "Location successfully changed"
                        : "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ";
    }

    static ReplyKeyboard mainPanel(Language lang) {
        return lang == UZBEK ? keyboard(Util.mainMenuUz) :
                lang == ENGLISH ? keyboard(Util.mainMenuEn) :
                        keyboard(Util.mainMenuRu);
    }

    static ReplyKeyboard settingsPanel(Language lang) {
        return lang == UZBEK ? keyboard(Util.settingsPanelUz) :
                lang == ENGLISH ? keyboard(Util.settingsPanelEn) :
                        keyboard(Util.settingsPanelRu);
    }

    static DailyWeatherInfo getDailyMessage(User user) {
        Response response;
        Language lang = user.getLanguage();

        if (user.getLocation() != null) {
            response = ApiService.getDailyInformation(user.getLocation().getLongitude(), user.getLocation().getLatitude(), null);
        } else {
            response = ApiService.getDailyInformation(null, null, user.getCity());
        }

        if (Objects.requireNonNull(response).getCod() == 200) {
            user.setCityFound(true);

            Main main = Objects.requireNonNull(response).getMain();
            Clouds clouds = response.getClouds();
            Wind wind = response.getWind();
            Sys sys = response.getSys();
            Coord coord = response.getCoord();
            List<WeatherItem> weather = response.getWeather();
            Rain rain = response.getRain();

            String weatherDesc = weather != null && !weather.isEmpty() ?
                    weather.get(0).getDescription() : (lang == UZBEK ? "Ma'lumot yo‚Äòq" : (lang == ENGLISH ? "No data available" : "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"));

            long sunriseTime = (long) sys.getSunrise() * 1000;
            long sunsetTime = (long) sys.getSunset() * 1000;
            String sunrise = new SimpleDateFormat("HH:mm").format(new Date(sunriseTime));
            String sunset = new SimpleDateFormat("HH:mm").format(new Date(sunsetTime));

            String rainInfo = "";
            if (rain != null) {
                double rainLast3Hours = rain.getThreeHour();
                if (rainLast3Hours > 0) {
                    rainInfo = (lang == UZBEK) ?
                            "‚òî Yomg‚Äòir yog‚Äòmoqda. Oxirgi 3 soatda: " + rainLast3Hours + " mm" :
                            (lang == ENGLISH) ?
                                    "‚òî It's raining. Last 3 hours: " + rainLast3Hours + " mm" :
                                    "‚òî –ò–¥–µ—Ç –¥–æ–∂–¥—å. –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —á–∞—Å–∞: " + rainLast3Hours + " –º–º";
                }
            }

            String message = (lang == UZBEK) ? """
                    üå§Ô∏è %s uchun ob-havo üå§Ô∏è
                    
                    ‚òÅÔ∏è Havo holati: %s
                    üå°Ô∏è Harorat: %s¬∞C
                    üíß Namlik: %d%%
                    ‚è≤ Bosim: %d mb
                    üå´Ô∏è Ko‚Äòrish masofasi: %d m
                    üí® Shamol: %s m/s, %d¬∞
                    ‚òÅÔ∏è Bulut qoplami: %d%%
                    %s
                    
                    üåÖ Quyosh chiqishi: %s
                    üåá Quyosh botishi: %s
                    üåç Koordinatalar: %s, %s
                    """.formatted(response.getName(), weatherDesc, main.getTempMin().toString(), main.getHumidity(), main.getPressure(), response.getVisibility(), wind.getSpeed().toString(), wind.getDeg(), clouds.getAll(), rainInfo, sunrise, sunset, coord.getLat().toString(), coord.getLon().toString()) :

                    (lang == ENGLISH) ? """
                            üå§Ô∏è Weather in %s üå§Ô∏è
                            
                            ‚òÅÔ∏è Condition: %s
                            üå°Ô∏è Temperature: %s¬∞C
                            üíß Humidity: %d%%
                            ‚è≤ Pressure: %d mb
                            üå´Ô∏è Visibility: %d m
                            üí® Wind: %s m/s, %d¬∞
                            ‚òÅÔ∏è Cloud coverage: %d%%
                            %s
                            
                            üåÖ Sunrise: %s
                            üåá Sunset: %s
                            üåç Coordinates: %s, %s
                            """.formatted(response.getName(), weatherDesc, main.getTempMin().toString(), main.getHumidity(), main.getPressure(), response.getVisibility(), wind.getSpeed().toString(), wind.getDeg(), clouds.getAll(), rainInfo, sunrise, sunset, coord.getLat().toString(), coord.getLon().toString()) :

                            """
                                    üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ %s üå§Ô∏è
                                    
                                    ‚òÅÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ: %s
                                    üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %s¬∞C
                                    üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%
                                    ‚è≤ –î–∞–≤–ª–µ–Ω–∏–µ: %d –º–±
                                    üå´Ô∏è –í–∏–¥–∏–º–æ—Å—Ç—å: %d –º
                                    üí® –í–µ—Ç–µ—Ä: %s –º/—Å, %d¬∞
                                    ‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ—Å—Ç—å: %d%%
                                    %s
                                    
                                    üåÖ –í–æ—Å—Ö–æ–¥: %s
                                    üåá –ó–∞–∫–∞—Ç: %s
                                    üåç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: %s, %s
                                    """.formatted(response.getName(), weatherDesc, main.getTempMin().toString(), main.getHumidity(), main.getPressure(), response.getVisibility(), wind.getSpeed().toString(), wind.getDeg(), clouds.getAll(), rainInfo, sunrise, sunset, coord.getLat().toString(), coord.getLon().toString());

            String imagePath = getWeatherImagePath(response);
            return new DailyWeatherInfo(message, imagePath);
        } else {
            user.setCityFound(false);
            String errorMessage = lang == UZBEK ? "‚ùå Kechirasiz, kiritilgan shahar topilmadi. Iltimos, shahar nomini tekshirib qaytadan kiriting yoki lokatsiyangizni yuboring!" :
                    lang == ENGLISH ? "‚ùå Sorry, the specified city was not found. Please check the city name and try again or send your location!" :
                            "‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, —É–∫–∞–∑–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é!";
            return new DailyWeatherInfo(errorMessage, "src/main/resources/weather.jpg");
        }
    }


    static String getWeeklyMessage(User user) {
        WeatherForecast forecast;
        Language lang = user.getLanguage();

        if (user.getLocation() != null) {
            forecast = ApiService.getWeeklyInformation(user.getLocation().getLongitude(), user.getLocation().getLatitude(), null);
        } else {
            forecast = ApiService.getWeeklyInformation(null, null, user.getCity());
        }

        if (Objects.equals(forecast.getCod(), "200")) {
            user.setCityFound(true);

            List<ForecastItem> forecastList = forecast.getList();
            City city = forecast.getCity();

            StringBuilder message = new StringBuilder();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm");

            message.append((lang == Language.UZBEK) ?
                    String.format("üå§Ô∏è %s uchun 5 kunlik ob-havo prognozi üå§Ô∏è\n\n", city.getName()) :
                    (lang == Language.ENGLISH) ?
                            String.format("üå§Ô∏è 5-day weather forecast for %s üå§Ô∏è\n\n", city.getName()) :
                            String.format("üå§Ô∏è –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ 5 –¥–Ω–µ–π –¥–ª—è %s üå§Ô∏è\n\n", city.getName()));

            String lastDate = "";


            for (ForecastItem item : forecastList) {
                String currentDate = dateFormat.format(new Date(item.getDt() * 1000));
                if (!currentDate.equals(lastDate)) {
                    lastDate = currentDate;

                    Main main = item.getMain();
                    List<WeatherItem> weather = item.getWeather();
                    Wind wind = item.getWind();
                    Clouds clouds = item.getClouds();

                    String weatherDesc = weather != null && !weather.isEmpty() ?
                            weather.get(0).getDescription() : (lang == Language.UZBEK ?
                            "Ma'lumot yo‚Äòq" : (lang == Language.ENGLISH ?
                            "No data available" : "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"));

                    double temp = (main.getTemp() != null) ? main.getTemp() : 0.0;
                    double speed = (wind.getSpeed() != null) ? (double) wind.getSpeed() : 0.0;

                    message.append((lang == Language.UZBEK) ?
                            String.format(
                                    """
                                            üìÖ %s:
                                            ‚òÅÔ∏è Havo holati: %s
                                            üå°Ô∏è Harorat: %.1f¬∞C
                                            üíß Namlik: %d%%
                                            üí® Shamol: %.1f m/s
                                            ‚òÅÔ∏è Bulut qoplami: %d%%
                                            
                                            
                                            """,
                                    currentDate, weatherDesc, temp, main.getHumidity(), speed, clouds.getAll()
                            ) :
                            (lang == Language.ENGLISH) ?
                                    String.format(
                                            """
                                                    üìÖ %s:
                                                    ‚òÅÔ∏è Condition: %s
                                                    üå°Ô∏è Temperature: %.1f¬∞C
                                                    üíß Humidity: %d%%
                                                    üí® Wind: %.1f m/s
                                                    ‚òÅÔ∏è Cloud coverage: %d%%
                                                    
                                                    
                                                    """,
                                            currentDate, weatherDesc, temp, main.getHumidity(), speed, clouds.getAll()
                                    ) :
                                    String.format(
                                            """
                                                    üìÖ %s:
                                                    ‚òÅÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ: %s
                                                    üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.1f¬∞C
                                                    üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%
                                                    üí® –í–µ—Ç–µ—Ä: %.1f –º/—Å
                                                    ‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ—Å—Ç—å: %d%%
                                                    
                                                    
                                                    """,
                                            currentDate, weatherDesc, temp, main.getHumidity(), speed, clouds.getAll()
                                    ));
                }
            }

            long sunriseTime = city.getSunrise() * 1000L;
            long sunsetTime = city.getSunset() * 1000L;
            String sunrise = timeFormat.format(new Date(sunriseTime));
            String sunset = timeFormat.format(new Date(sunsetTime));

            double lat = (city.getCoord().getLat() != null) ? (double) city.getCoord().getLat() : 0.0;
            double lon = (city.getCoord().getLon() != null) ? (double) city.getCoord().getLon() : 0.0;

            message.append((lang == Language.UZBEK) ?
                    String.format("üåÖ Quyosh chiqishi: %s\nüåá Quyosh botishi: %s\nüåç Koordinatalar: %.2f, %.2f",
                            sunrise, sunset, lat, lon) :
                    (lang == Language.ENGLISH) ?
                            String.format("üåÖ Sunrise: %s\nüåá Sunset: %s\nüåç Coordinates: %.2f, %.2f",
                                    sunrise, sunset, lat, lon) :
                            String.format("üåÖ –í–æ—Å—Ö–æ–¥: %s\nüåá –ó–∞–∫–∞—Ç: %s\nüåç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: %.2f, %.2f",
                                    sunrise, sunset, lat, lon));

            return message.toString();
        } else {
            user.setCityFound(false);
            return lang == Language.UZBEK ?
                    "‚ùå Kechirasiz, kiritilgan shahar topilmadi. Iltimos, shahar nomini tekshirib qaytadan kiriting yoki lokatsiyangizni yuboring!" :
                    lang == Language.ENGLISH ?
                            "‚ùå Sorry, the specified city was not found. Please check the city name and try again or send your location!" :
                            "‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, —É–∫–∞–∑–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é!";
        }
    }

    static String getWeatherImagePath(Response response) {
        double temp = response.getMain().getTemp();
        if (temp <= 10) {
            return "src/main/resources/cold.jpg";
        } else if (temp <= 25) {
            return "src/main/resources/warm.jpg";
        } else {
            return "src/main/resources/hot.jpg";
        }
    }

    record DailyWeatherInfo(String message, String imagePath) {
    }
}


